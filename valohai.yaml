- step:
    name: Execute ml
    image: chenuuu5/cargo-ml-runtime:latest
    command: python3 GrossVolumeTraining.py
    inputs:
      - name: training_sample_input
        default: datum://0172fe4a-987e-bbce-1651-b19a23d28f79
    environment: aws-eu-west-1-g2-2xlarge


- step:
    name: package maven project
    image: maven
    command:
      - cp ${VH_INPUTS_DIR}/model/GrossVolumeModel_gbm.java ${VH_REPOSITORY_DIR}/src/main/java/GrossVolumeModel/GrossVolumeModel_gbm.java 
      - sed -i '1s/^/package GrossVolumeModel;/' ${VH_REPOSITORY_DIR}/src/main/java/GrossVolumeModel/GrossVolumeModel_gbm.java
      - mvn clean package -f ${VH_REPOSITORY_DIR}/pom.xml > ${VH_OUTPUTS_DIR}/mvn_log.txt
      - cp ${VH_REPOSITORY_DIR}/target/mlModel-1.0.0.jar ${VH_OUTPUTS_DIR}/mlModel-1.0.0.jar
    inputs:
        - name: model
          default: datum://0172fe69-525e-ba45-fb26-af80212c92b0
    environment: aws-eu-west-1-g2-2xlarge
       
- pipeline:
    name: Training pipeline
    nodes:
      - name: execute-ml
        type: execution
        step: Execute ml
      - name: package-jar
        type: execution
        step: package maven project
    edges:
      - [execute-ml.output.*, package-jar.input.model]
